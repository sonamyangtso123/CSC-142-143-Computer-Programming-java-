#BlueJ class context
comment0.target=MovieReviews
comment0.text=\n\ \ MovieReviews\ class\ reads\ movie\ reviews\ from\ several\ reviewers\ and\ sort\ them\ in\ ranking\ order.\n\ \n\ @author\ (Sonam\ Yangtso\ )\ \n\ @version\ (2/25/2017)\n
comment1.params=fileName
comment1.target=MovieReviews(java.io.File)
comment1.text=\n\ constructor\ MovieReviews\ \ calls\ readReviews,\ generateRankings,\ and\ calculateAvgRankings,\ all\ private\ methods.\n\n\ @param\ \ fileName;\n\ @throws\ FileNotFoundException\n
comment10.params=
comment10.target=void\ displayRankedReviews()
comment11.params=rawDisplay
comment11.target=void\ displayReviews(int[][])
comment11.text=\n\ displayReviews\ method\ is\ private\ method,it\ takes\ a\ parameter\ \n\ referring\ to\ the\ review\ array\ to\ display\ (raw\ or\ ranked)\n\n\ @param\ int[][]\ rawDisplay\n
comment12.params=
comment12.target=void\ displayReviews1()
comment13.params=fileName
comment13.target=void\ readReviews(java.io.File)
comment13.text=\n\ readReviews\ is\ a\ private\ method\ and\ use\ Scanner\ to\ read\ the\ file.\n\ creates\ the\ raw\ ,\ movie\ title\ and\ reviewers\ arrays.\n\n\ @\ throws\ FileNotFoundException\n
comment14.params=
comment14.target=void\ generateRankings()
comment14.text=\n\ \ generateRankings\ is\ a\ private\ method\ creates\ the\ \ rankedReviews\ array\ using\ \ncopyOf\ method\ and\ sort\ method.\n
comment15.params=
comment15.target=void\ calculateAvgRankings()
comment15.text=\n\ calculateAvgRankings\ is\ a\ private\ method\ and\ create\ an\ array\ to\ hold\n\ average\ rankings\ per\ movie\n\n\ \n
comment16.params=
comment16.target=void\ sortByRanking()
comment16.text=\n\ \ sortByRanking\ methodsort\ the\ movies\ such\ that\ the\ movie\ with\ the\ highest\ ranking\ comes\ first\ \n\ \ and\ the\ one\ with\ the\ lowest\ ranking\ last,maintaining\ parallel\ data\ in\ the\ avgRanks,\ \n\ \ movieTitles,\ rawReviewers,\ and\ rankedReviews\ arrays\n\n
comment2.params=
comment2.target=int\ getReviewerCount()
comment2.text=\naccessor\ \ getReviewerCount\ method\ get\ the\ number\ of\ reviewers\ from\ the\ file.\n\n\ \n\ @return\ \ \ \ \ number\ of\ reviewers(row).\n
comment3.params=
comment3.target=int\ getMovieCount()
comment3.text=\naccessor\ \ getMovieCount\ method\ get\ the\ number\ of\ movies\ \ from\ the\ file\ to\ review.\n\n\ \n\ @return\ \ \ \ \ number\ of\ movies(column).\n
comment4.params=r\ m
comment4.target=int\ getRawReview(int,\ int)
comment4.text=\n\ Accessor\ getRawReview\ method\ gets\ you\ rawReview\ 2D\ arrray.\n\ @param\ \ int\ r(number\ of\ reviewers\ )\ ,int\ m(number\ of\ movies)\n\ @return\ \ \ rawReviews[r][m]\ \ \n\ @throws\ \ an\ Illegal\ Argument\ Exception\n
comment5.params=r\ m
comment5.target=int\ getRankedReview(int,\ int)
comment5.text=\n\ Accessor\ getRankedReview\ \ method\ gets\ you\ rankedReviews\ 2D\ arrray.\n\ @param\ \ int\ r(number\ of\ reviewers\ )\ ,int\ m(number\ of\ movies)\n\ @return\ \ rankedReviews\ [r][m]\ \ \n\ @throws\ \ an\ Illegal\ Argument\ Exception\n
comment6.params=m
comment6.target=java.lang.String\ getMovieTitle(int)
comment6.text=\n\ Accessor\ getMovieTitle\ \ method\ gets\ you\ movieTitles\ arrray.\n\ @param\ \ int\ m(number\ of\ movies)\n\ @return\ \ movieTitles[m]\ \ \n\ @throws\ \ an\ Illegal\ Argument\ Exception\n
comment7.params=r
comment7.target=java.lang.String\ getReviewerName(int)
comment7.text=\n\ Accessor\ getReviewerName\ method\ gets\ you\ reviewers\ arrray.\n\ @param\ \ int\ r(number\ of\ reviewers\ )\n\ @return\ \ \ reviewers[r]\n\ @throws\ \ an\ Illegal\ Argument\ Exception\n
comment8.params=m
comment8.target=double\ getAvgRank(int)
comment9.params=
comment9.target=void\ displayRawReviews()
numComments=17
